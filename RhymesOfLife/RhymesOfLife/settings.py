"""
Django settings for RhymesOfLife project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import json
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

with open(BASE_DIR / "../environment.json") as f:
    environment = json.loads(f.read())

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = environment["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = environment["DEBUG"]

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # project apps
    'base',
    'blog',

    # extras
    'django.contrib.humanize.apps.HumanizeConfig',

    # wagtail
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail',

    'modelcluster',
    'taggit',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    # Enforce verified email for authenticated non-superusers
    'base.middleware.EnforceVerifiedMiddleware',

    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'RhymesOfLife.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Global template directory
        'APP_DIRS': True,  # Allows templates inside each app's `templates/`
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'base.context_processors.notifications',
            ],
        },
    },
]

WSGI_APPLICATION = 'RhymesOfLife.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': environment["DB_NAME"],
        'USER': environment["DB_USER"],
        'PASSWORD': environment["DB_PASSWORD"],
        'HOST': environment["DB_HOST"],
        'PORT': environment["DB_PORT"],
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'en'

LANGUAGES = [
    ("en", "English"),
    ("ru", "Русский"),
]

TIME_ZONE = 'UTC'

USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')  # Global static directory
]

LOCALE_PATHS = [BASE_DIR / 'locale']

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email config (Yandex SMTP)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_USE_SSL = True

EMAIL_HOST_USER = environment["EMAIL_HOST_USER"]
EMAIL_HOST_PASSWORD = environment["EMAIL_HOST_PASSWORD"]
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Mailgun config
MAILGUN_API_TOKEN = environment.get("MAILGUN_API_TOKEN")
MAILGUN_URL = environment.get("MAILGUN_URL")
MAILGUN_MAIL_DOAMIN = environment.get("MAILGUN_MAIL_DOAMIN")
DEFAULT_FROM_EMAIL = "Rhymes of Life <admin@igstan.com>"

BASE_URL = environment.get("BASE_URL")

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Site ID for django.contrib.sites
SITE_ID = 1

# Wagtail settings
WAGTAIL_SITE_NAME = 'Rhymes of Life'
WAGTAIL_I18N_ENABLED = True
WAGTAIL_CONTENT_LANGUAGES = [
    ('en', 'English'),
    ('ru', 'Russian'),
]
WAGTAILIMAGES_IMAGE_MODEL = 'wagtailimages.Image'
WAGTAILIMAGES_MAX_UPLOAD_SIZE = 10 * 1024 * 1024  # 10MB
WAGTAILIMAGES_EXTENSIONS = ['gif', 'jpg', 'jpeg', 'png', 'webp']

# No CKEditor Django apps/config — we use CDN + custom upload endpoint
WAGTAILADMIN_BASE_URL = BASE_URL

# Email verification middleware configuration
EMAIL_VERIFICATION_EXEMPT_URLNAMES = {
    # Public/auth routes:
    'login',
    'logout',
    'register',
    'home',
    'verify_email',
    'request_verification',
    'verify_prompt',
    'profile_onboarding',
    'set_language',
    'admin:index',
}

EMAIL_VERIFICATION_EXEMPT_PATHS = {
    # Static/media & misc file endpoints are handled inside middleware defaults,
    # add extra path prefixes here if needed, e.g. '/healthz'
}
